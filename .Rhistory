georgBar <- plot_ly(mdr_tb_dfv1, x=~Province, y=~AGE, type = 'bar')
source("~/MDR_TB/Mdrscrpit.R")
table(mdr_tb_dfv3$Province)
hist <- ggplot(mdr_tb_dfv1, mapping = aes(x=AGE)) + geom_histogram()
source("~/MDR_TB/Mdrscrpit.R")
hist <- ggplot(mdr_tb_dfv1, mapping = aes(x=AGE)) + geom_histogram()
library('tidyverse')
#install.packages('plotly')
#install.packages('ggmap')
library(ggmap)
library(plotly)
library('ggdist')
mdr_tb_df <- read.csv('mdr_tbv4.csv')
mdr_tb_df
mdr_tb_df$MDR_TYPE <- NA
# Here i have defined Rpob + katg as MDRKR (MDR KatG and RpoB), as well as those that are rpob + katg + inha
mdr_tb_df$MDR_TYPE[mdr_tb_df$RpoB == 'Resistant' & mdr_tb_df$KatG == 'Resistant'] <- 'MDRKR'
mdr_tb_df$MDR_TYPE[mdr_tb_df$RpoB == 'Resistant' & mdr_tb_df$KatG != 'Resistant' & mdr_tb_df$inhA == 'Resistant'] <- 'MDRIR'
mdr_tb_dfv1 <- mdr_tb_df %>% select(-RpoB, -KatG, -inhA, -collapsed)
hist <- ggplot(mdr_tb_dfv1, mapping = aes(x=AGE)) + geom_histogram()
mdr_tb_df <- read.csv('mdr_tbv4.csv')
mdr_tb_df
mdr_tb_df$MDR_TYPE <- NA
# Here i have defined Rpob + katg as MDRKR (MDR KatG and RpoB), as well as those that are rpob + katg + inha
mdr_tb_df$MDR_TYPE[mdr_tb_df$RpoB == 'Resistant' & mdr_tb_df$KatG == 'Resistant'] <- 'MDRKR'
mdr_tb_df$MDR_TYPE[mdr_tb_df$RpoB == 'Resistant' & mdr_tb_df$KatG != 'Resistant' & mdr_tb_df$inhA == 'Resistant'] <- 'MDRIR'
mdr_tb_dfv1 <- mdr_tb_df %>% select(-RpoB, -KatG, -inhA, -collapsed)
# Here i have defined Rpob + katg as MDRKR (MDR KatG and RpoB), as well as those that are rpob + katg + inha
mdr_tb_df$MDR_TYPE[mdr_tb_df$RpoB == 'Resistant' & mdr_tb_df$KatG == 'Resistant'] <- 'MDRKR'
mdr_tb_df$MDR_TYPE[mdr_tb_df$RpoB == 'Resistant' & mdr_tb_df$KatG != 'Resistant' & mdr_tb_df$inhA == 'Resistant'] <- 'MDRIR'
mdr_tb_dfv1 <- mdr_tb_df %>% select(-RpoB, -KatG, -inhA, -collapsed)
mdr_tb_dfv1
hivbar <- ggplot(mdr_tb_dfv1, mapping = aes(x=HIV_STATUS)) + geom_bar(mapping = aes(fill = HIV_STATUS)) + ggtitle('HIV status and multidrug resistance in 2015-2016 samples from NTRL')
mdr_tb_df
mdr_tb_dfv1 <- mdr_tb_df %>% select(-RpoB, -KatG, -inhA, -collapsed)
mdr_tb_dfv1 <- mdr_tb_df %>% select(-RpoB, -KatG, -inhA)
mdr_tb_dfv1
hist <- ggplot(mdr_tb_dfv1, mapping = aes(x=AGE)) + geom_histogram()
hist
hist <- ggplot(mdr_tb_dfv1, mapping = aes(x=AGE, fill = 'HIV_STATUS')) + geom_histogram()
hist
table(mdr_tb_dfv3$TB_TYPE)
age_breakpoints <- c(5, 15, 25, 35, 45, 55, 65)
mdr_tb_dfv2 <- cut(mdr_tb_dfv1$AGE, breaks = age_breakpoints, include.lowest = TRUE)
mdr_tb_dfv2
mdr_tb_dfv1$age_groups <- mdr_tb_dfv2
mdr_tb_dfv1 %>% select(-age_groups)
mdr_tb_dfv1 <- mdr_tb_dfv1 %>% select(-age_groups)
mdr_tb_dfv1
mdr_tb_dfv3 <- mdr_tb_dfv1 %>%   mutate(
# Create categories
age_group = dplyr::case_when(
AGE <= 14            ~ "0-14",
AGE > 14 & AGE <= 44 ~ "15-44",
AGE > 44 & AGE<= 64 ~ "45-64",
AGE > 64             ~ "> 64"
),
# Convert to factor
age_group = factor(
age_group,
level = c("0-14", "15-44","45-64", "> 64")
)
)
age_grrpBars <- ggplot(mdr_tb_dfv3, mapping = aes(x=age_group)) + geom_bar()
age_grrpBars
table(mdr_tb_dfv3$TB_TYPE)
tb_type_percentages <- mdr_tb_dfv1 %>% group_by(TB_TYPE) %>% mutate(percentage = n/sum(n) *100)
tb_type_percentages <- mdr_tb_dfv1 %>% group_by(TB_TYPE) %>% count() %>% mutate(percentage = n/sum(n) *100)
tb_type_percentages
tb_type_percentages <- mdr_tb_dfv1 %>% group_by(TB_TYPE) %>% summarize(count()) %>% mutate(percentage = n/sum(n) *100)
tb_type_percentages <- mdr_tb_dfv1 %>% group_by(TB_TYPE) %>% summarise(count()) %>% mutate(percentage = n/sum(n) *100)
tb_type_percentages <- mdr_tb_dfv1 %>% group_by(TB_TYPE) %>% (count() %>% mutate(percentage = count/sum(count) *100)
tb_type_percentages <- mdr_tb_dfv1 %>% group_by(TB_TYPE) %>% (count() %>% mutate(percentage = count/sum(count) *100)
tb_type_percentages <- mdr_tb_dfv1 %>% group_by(TB_TYPE) %>% count() %>% mutate(percentage = count/sum(count) *100)
tb_type_percentages <- mdr_tb_dfv1 %>% group_by(TB_TYPE) %>% summarise (count = n()) %>% mutate(percentage = count/sum(count) *100)
tb_type_percentages
geoGrpsPcts <- mdr_tb_dfv1 %>% summarise(count = n()) %>% mutate(percentages = count/sum(count) * 100)
geoGrpsPcts
geoGrpsPcts <- mdr_tb_dfv1 %>% group_by(Province) %>% summarise(count = n()) %>% mutate(percentages = count/sum(count) * 100)
geoGrpsPcts
#install.packages('plotly')
#install.packages('ggmap')
library('focast')
#install.packages('plotly')
#install.packages('ggmap')
library('forcats')
#install.packages('plotly')
#install.packages('ggmap')
install.packages('forcats')
#install.packages('plotly')
#install.packages('ggmap')
install.packages('forcats')
install.packages('forcats')
install.packages("forcats")
